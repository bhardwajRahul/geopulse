# HTTP configuration
quarkus.http.port=8080
quarkus.http.limits.max-form-attribute-size=2147483647
quarkus.http.limits.max-body-size=2147483647
quarkus.http.read-timeout=20m

# PostgreSQL configuration
quarkus.datasource.username=${GEOPULSE_POSTGRES_USERNAME}
quarkus.datasource.password=${GEOPULSE_POSTGRES_PASSWORD}
quarkus.datasource.jdbc.url=${GEOPULSE_POSTGRES_URL}
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.max-size=16
quarkus.datasource.jdbc.acquisition-timeout=60s
quarkus.datasource.jdbc.leak-detection-interval=60s
quarkus.datasource.jdbc.max-lifetime=30m

# Migration
quarkus.flyway.migrate-at-start=true
quarkus.flyway.locations=db/migration
quarkus.flyway.baseline-on-migrate=true

# Hibernate ORM configuration
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.jdbc.statement-batch-size=${GEOPULSE_IMPORT_BULK_INSERT_BATCH_SIZE:500}

# Transaction configuration for large imports
quarkus.transaction-manager.default-transaction-timeout=600s

#JWT
quarkus.smallrye-jwt.enabled=true
smallrye.jwt.new-token.lifespan=${GEOPULSE_JWT_ACCESS_TOKEN_LIFESPAN:1800}
jwt.refresh-token.lifespan=${GEOPULSE_JWT_REFRESH_TOKEN_LIFESPAN:604800}

smallrye.jwt.new-token.issuer=${GEOPULSE_JWT_ISSUER:http://localhost:8080}
mp.jwt.verify.issuer=${GEOPULSE_JWT_ISSUER:http://localhost:8080}

mp.jwt.verify.publickey.location=${GEOPULSE_JWT_PUBLIC_KEY_LOCATION:file:/app/keys/jwt-public-key.pem}
smallrye.jwt.sign.key.location=${GEOPULSE_JWT_PRIVATE_KEY_LOCATION:file:/app/keys/jwt-private-key.pem}

# CSRF Protection Configuration
quarkus.rest-csrf.token-header-name=X-CSRF-Token
quarkus.rest-csrf.cookie-name=csrf-token
quarkus.rest-csrf.form-field-name=_csrf
quarkus.rest-csrf.cookie-http-only=false
quarkus.rest-csrf.require-form-url-encoded=false
quarkus.rest-csrf.cookie-domain=${GEOPULSE_COOKIE_DOMAIN:}
quarkus.rest-csrf.cookie-force-secure=${GEOPULSE_AUTH_SECURE_COOKIES:false}

quarkus.http.auth.proactive=false
quarkus.http.auth.permission.default.paths=/*
quarkus.http.auth.permission.default.policy=authenticated

quarkus.http.auth.permission.public.paths=/api/auth/*,\
  /api/users/sign-up/status,\
  /api/prometheus/metrics,\
  /api/health,\
  /api/users/register,\
  /api/owntracks,\
  /api/overland,\
  /api/dawarich/*,\
  /api/homeassistant/*,\
  /api/shared/*,\
  /api/geocoding/*
quarkus.http.auth.permission.public.policy=permit

geopulse.auth.secure-cookies=${GEOPULSE_AUTH_SECURE_COOKIES:false}
geopulse.auth.cookie-domain=${GEOPULSE_COOKIE_DOMAIN:}
geoupuse.auth.sign-up-enabled=${GEOPULSE_AUTH_SIGN_UP_ENABLED:true}

# JWT Configuration - Quarkus automatically supports both sources:
# 1. Authorization header (Bearer tokens) for API clients
# 2. HTTP-only cookies (access_token) for web application
mp.jwt.token.header=Cookie
mp.jwt.token.cookie=access_token
smallrye.jwt.always-check-authorization=true

# Geocoding Configuration
geocoding.provider.primary=${GEOPULSE_GEOCODING_PRIMARY_PROVIDER:nominatim}
geocoding.provider.fallback=${GEOPULSE_GEOCODING_FALLBACK_PROVIDER:""}
geocoding.provider.delay.ms=${GEOPULSE_GEOCODING_DELAY_MS:1000}

# Nominatim API Configuration
geocoding.provider.nominatim.enabled=${GEOPULSE_GEOCODING_NOMINATIM_ENABLED:true}
quarkus.rest-client.nominatim-api.url=${GEOPULSE_GEOCODING_NOMINATIM_URL:https://nominatim.openstreetmap.org}
quarkus.rest-client.nominatim-api.user-agent=GeoPulse/1.1.2 (+https://github.com/tess1o/geopulse)

geocoding.provider.photon.enabled=${GEOPULSE_GEOCODING_PHOTON_ENABLED:false}
quarkus.rest-client.photon-api.url=${GEOPULSE_GEOCODING_PHOTON_URL:https://photon.komoot.io}

# Google Maps API Configuration
geocoding.provider.googlemaps.enabled=${GEOPULSE_GEOCODING_GOOGLE_MAPS_ENABLED:false}
quarkus.rest-client.googlemaps-api.url=https://maps.googleapis.com/maps/api
geocoding.googlemaps.api-key=${GEOPULSE_GEOCODING_GOOGLE_MAPS_API_KEY:""}

# Mapbox API Configuration
geocoding.provider.mapbox.enabled=${GEOPULSE_GEOCODING_MAPBOX_ENABLED:false}
quarkus.rest-client.mapbox-api.url=https://api.mapbox.com
geocoding.mapbox.access-token=${GEOPULSE_GEOCODING_MAPBOX_ACCESS_TOKEN:""}

# Default timeline configs. They can be overwritten by each user individually or via ENV variables
geopulse.timeline.staypoint.use_velocity_accuracy=${GEOPULSE_TIMELINE_STAYPOINT_USE_VELOCITY_ACCURACY:true}
geopulse.timeline.staypoint.velocity.threshold=${GEOPULSE_TIMELINE_STAYPOINT_VELOCITY_THRESHOLD:2.5}
geopulse.timeline.staypoint.accuracy.threshold=${GEOPULSE_TIMELINE_STAYPOINT_ACCURACY_THRESHOLD:60.0}
geopulse.timeline.staypoint.min_accuracy_ratio=${GEOPULSE_TIMELINE_STAYPOINT_MIN_ACCURACY_RATIO:0.5}
geopulse.timeline.staypoint.radius_meters=${GEOPULSE_TIMELINE_STAYPOINT_RADIUS_METERS:50}
geopulse.timeline.staypoint.min_duration_minutes=${GEOPULSE_TIMELINE_STAYPOINT_MIN_DURATION_MINUTES:7}

# Merge staypoints
geopulse.timeline.staypoint.merge.enabled=${GEOPULSE_TIMELINE_STAYPOINT_MERGE_ENABLED:true}
geopulse.timeline.staypoint.merge.max_distance_meters=${GEOPULSE_TIMELINE_STAYPOINT_MERGE_MAX_DISTANCE_METERS:400}
geopulse.timeline.staypoint.merge.max_time_gap_minutes=${GEOPULSE_TIMELINE_STAYPOINT_MERGE_MAX_TIME_GAP_MINUTES:15}

# Trip
geopulse.timeline.trip.detection.algorithm=${GEOPULSE_TIMELINE_TRIP_DETECTION_ALGORITHM:single}

# Travel Classification Configuration  
geopulse.timeline.travel_classification.walking.max_avg_speed=${GEOPULSE_TIMELINE_WALKING_MAX_AVG_SPEED:6.0}
geopulse.timeline.travel_classification.walking.max_max_speed=${GEOPULSE_TIMELINE_WALKING_MAX_MAX_SPEED:8.0}
geopulse.timeline.travel_classification.car.min_avg_speed=${GEOPULSE_TIMELINE_CAR_MIN_AVG_SPEED:8.0}
geopulse.timeline.travel_classification.car.min_max_speed=${GEOPULSE_TIMELINE_CAR_MIN_MAX_SPEED:15.0}
geopulse.timeline.travel_classification.short_distance_km=${GEOPULSE_TIMELINE_SHORT_DISTANCE_KM:1.0}

geopulse.timeline.timezone.default=Europe/Kyiv

geopulse.favorites.max-distance-from-point=75
geopulse.favorites.max-distance-from-area=15

# Import batch size configuration
geopulse.import.bulk-insert-batch-size=${GEOPULSE_IMPORT_BULK_INSERT_BATCH_SIZE:500}
geopulse.import.merge-batch-size=${GEOPULSE_IMPORT_MERGE_BATCH_SIZE:250}

# GeoJSON streaming parser configuration
# Batch size for streaming GeoJSON imports - aligns with bulk insert batch size for optimal performance
# During streaming, batches are flushed directly to database to minimize memory usage
geopulse.import.geojson.streaming-batch-size=${GEOPULSE_IMPORT_GEOJSON_STREAMING_BATCH_SIZE:500}

# Google Timeline streaming parser configuration
# Batch size for streaming Google Timeline imports - aligns with bulk insert batch size for optimal performance
# During streaming, batches are flushed directly to database to minimize memory usage
geopulse.import.googletimeline.streaming-batch-size=${GEOPULSE_IMPORT_GOOGLETIMELINE_STREAMING_BATCH_SIZE:500}

# Import temp file configuration (for large file handling)
# Files larger than this threshold are saved to temp directory instead of loading into memory
# This prevents OOM errors with large file uploads (500MB+)
geopulse.import.temp-directory=${GEOPULSE_IMPORT_TEMP_DIR:/tmp/geopulse/imports}
geopulse.import.large-file-threshold-mb=${GEOPULSE_IMPORT_LARGE_FILE_THRESHOLD_MB:100}
geopulse.import.temp-file-retention-hours=${GEOPULSE_IMPORT_TEMP_FILE_RETENTION_HOURS:24}

# CORS Configuration - supports multiple origins separated by commas
# Example: http://localhost:5555,http://192.168.1.100:5555,https://your-domain.com
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=${GEOPULSE_UI_URL:http://localhost:5555}
quarkus.http.cors.methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization,Accept,X-CSRF-Token
quarkus.http.cors.exposed-headers=Location,Content-Disposition
quarkus.http.cors.access-control-allow-credentials=true

# Real-time Timeline Processing Configuration
geopulse.timeline.processing.thread-pool-size=${GEOPULSE_TIMELINE_PROCESSING_THREADS:2}
geopulse.timeline.job.interval=${GEOPULSE_TIMELINE_JOB_INTERVAL:5m}
geopulse.timeline.job.delay=${GEOPULSE_TIMELINE_JOB_DELAY:1m}

# GPS Path Simplification Configuration
geopulse.timeline.path.simplification.enabled=${GEOPULSE_TIMELINE_PATH_SIMPLIFICATION_ENABLED:true}
geopulse.timeline.path.simplification.tolerance=${GEOPULSE_TIMELINE_PATH_SIMPLIFICATION_TOLERANCE:15.0}
geopulse.timeline.path.simplification.max_points=${GEOPULSE_TIMELINE_PATH_SIMPLIFICATION_MAX_POINTS:100}
geopulse.timeline.path.simplification.adaptive=${GEOPULSE_TIMELINE_PATH_SIMPLIFICATION_ADAPTIVE:true}

# Data Gap Detection Configuration
geopulse.timeline.data_gap.threshold_seconds=${GEOPULSE_TIMELINE_DATA_GAP_THRESHOLD_SECONDS:10800}
geopulse.timeline.data_gap.min_duration_seconds=${GEOPULSE_TIMELINE_DATA_GAP_MIN_DURATION_SECONDS:1800}

# GPS Point Duplicate Detection Configuration
geopulse.gps.duplicate-detection.location-time-threshold-minutes=2

# MQTT Configuration (optional - only active when GEOPULSE_MQTT_ENABLED=true)
geopulse.mqtt.enabled=${GEOPULSE_MQTT_ENABLED:false}
geopulse.mqtt.broker.host=${GEOPULSE_MQTT_BROKER_HOST:geopulse-mosquitto}
geopulse.mqtt.broker.port=${GEOPULSE_MQTT_BROKER_PORT:1883}
geopulse.mqtt.username=${GEOPULSE_MQTT_USERNAME:geopulse_mqtt_admin}
geopulse.mqtt.password=${GEOPULSE_MQTT_PASSWORD:geopulse_mqtt_pass_123}

# OIDC Configuration
geopulse.oidc.enabled=${GEOPULSE_OIDC_ENABLED:false}
geopulse.oidc.callback-base-url=${GEOPULSE_UI_URL:http://localhost:5555}

# State token configuration
geopulse.oidc.state-token.length=32
geopulse.oidc.state-token.expiry-minutes=10

# Provider metadata caching (24 hours default)
geopulse.oidc.metadata-cache.ttl-hours=24
geopulse.oidc.metadata-cache.max-size=10

# OIDC Cleanup Configuration
geopulse.oidc.cleanup.session-states.enabled=${GEOPULSE_OIDC_CLEANUP_ENABLED:true}

# AI Feature Configuration
geopulse.ai.encryption.key.location=${GEOPULSE_AI_ENCRYPTION_KEY_LOCATION:file:/app/keys/ai-encryption-key.txt}


quarkus.micrometer.export.prometheus.path=/api/prometheus/metrics
quarkus.datasource.metrics.enabled=true
quarkus.hibernate-orm.metrics.enabled=true

mp.openapi.extensions.smallrye.openapi=3.0.4
mp.openapi.extensions.smallrye.info.title=GeoPulse API
mp.openapi.extensions.smallrye.info.version=1.1.2
mp.openapi.extensions.smallrye.info.description=GeoPulse backend REST API documentation.
mp.openapi.extensions.smallrye.info.contact.name=tess1o
mp.openapi.extensions.smallrye.info.contact.email=kerriden1@gmail.com

quarkus.smallrye-openapi.security-scheme-name=jwt

quarkus.smallrye-openapi.store-schema-directory=target/openapi/
mp.openapi.servers=/
quarkus.swagger-ui.always-include=false
quarkus.smallrye-openapi.enabled=false


geopulse.owntracks.ping.timestamp.override=${GEOPULSE_OWNTRACKS_PING_TIMESTAMP_OVERRIDE:false}